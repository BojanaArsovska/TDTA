
INSERT INTO auth_contrib SELECT author,file_name,SUM(changes) AS SCORE,COUNT(author) AS COUNT FROM commits GROUP BY author, file_name;



SELECT author,file_name, SUM(changes) AS SCORE, COUNT(author) AS COUNT INTO auth_contib FROM commits GROUP BY author, file_name;

total number of changes for each file
SELECT file_name, SUM(changes) AS SCORE FROM commits GROUP BY file_name;

SELECT author,file_name, SUM(changes) AS SCORE, COUNT(author) AS COUNT FROM commits GROUP BY author, file_name;

SELECT author,file_name, SUM(changes), COUNT(author) AS COUNT FROM commits GROUP BY author, file_name;


SELECT SUM(changes) AS SCORE, COUNT(author) AS COUNT FROM commits GROUP BY author, file_name;


CREATE TABLE file_author_contrib(id INTEGER PRIMARY KEY,
                    file_name TEXT,
                    author TEXT,
                    auth_churn INT,
                    total_churn INT,
                    file_size INT,
                    contrib_percent INT)



SELECT file_name, SUM(changes) AS SCORE FROM commits GROUP BY author, file_name order by COUNT Desc;

SELECT file_name, SUM(changes) AS SCORE FROM commits GROUP BY author, file_name order by COUNT Desc;

INSERT INTO file_author_contrib (file_name, author, auth_churn, file_size) SELECT file_name, author, SUM(changes) AS SCORE, nloc FROM commits GROUP BY file_name, author;

INSERT INTO file_author_contrib (total_churn) Select SUM(auth_churn) FROM file_author_contrib GROUP BY file_name where file_author_contrib.file_name = file_author_contrib.file_name;

INSERT INTO file_author_contrib (total_churn) SELECT SUM(auth_churn) FROM file_author_contrib GROUP BY file_name;

UPDATE file_author_contrib SET percentages = CAST(auth_churn AS float) / CAST(total_churn AS float);

delete from file_author_contrib where file_name ='';

UPDATE file_author_contrib SET file_size_x_percentages = CAST(percentages as float) * CAST(file_size as float)




PRAGMA table_info(file_author_contrib);



INSERT INTO author_contrib  Select author, sum(file_size_x_percentages), sum(file_size), sum(file_size)  from file_author_contrib where total_churn is not NULL group by author;

INSERT INTO author_contrib  Select author, sum(file_size_x_percentages), 73984, 0  from file_author_contrib where total_churn is not NULL group by author;


select sum(auth_churn) from file_author_contrib group by file_name;



UPDATE file_author_contrib
SET total_churn = (
  SELECT sum(auth_churn)
  FROM file_author_contrib f_a
  WHERE file_author_contrib.file_name = f_a.file_name
);

ALTER TABLE file_author_contrib
ADD total_churn_tool float;


UPDATE author_contrib SET percentages = CAST(auth_churn AS float) / CAST(total_churn AS float);

select sum(percentages), author, file_name, auth_churn, total_churn, percentages  from file_author_contrib order by author group by author;

select sum(select sum(percentages) from file_author_contrib group by author) from file_author_contrib;

select * from file_author_contrib where auth_churn != 0 or total_churn != 0 or file_size != 0 or auth_churn != NULL or total_churn != NULL or file_size != NULL or author != NULL;


UPDATE file_author_contrib SET file_size_x_percentages = CAST(percentages as float) * CAST(file_size as float)

UPDATE file_author_contrib
SET file_size = (
  SELECT MAX(file_size)
  FROM file_author_contrib f_a
  WHERE file_author_contrib.file_name = f_a.file_name
);


DELETE FROM file_author_contrib WHERE file_size is NULL;

select author, (sum(percentages/ 504) * 100.00) from file_author_contrib group by author;

02.05.2023

git shortlog -sne

09.05.2023

CREATE TABLE IF NOT EXISTS file_legacy_complexity(id INTEGER PRIMARY KEY,
                    file_name TEXT,
                    legacy_percentage FLOAT,
                    cog_complexity FLOAT)


SELECT auth_churn/ total_churn AS percentages FROM file_author_contrib;
